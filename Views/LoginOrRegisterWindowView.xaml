<Window x:Class="Instagram.Views.LoginOrRegisterWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Instagram.Views" 
        xmlns:validations="clr-namespace:Instagram.Validations" 
        xmlns:components="clr-namespace:Instagram.Components"
        mc:Ignorable="d"
        Title="Instagram" Height="550" Width="300" ResizeMode="NoResize">
    <Window.Resources>
        <ControlTemplate x:Key="validationTemplate">
            <StackPanel>
                <AdornedElementPlaceholder/>
                <TextBlock Foreground="Red" FontSize="10" Text="{Binding ErrorContent}"/>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="80"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Column="1" Grid.Row="1" Source="{Binding LogoPath}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <Label Content="EMAIL/NICKNAME:" Grid.Column="1" Grid.Row="2"/>
        <TextBox TabIndex="0" Grid.Column="1" Grid.Row="3" Padding="10" VerticalAlignment="Center" Height="40" Validation.ErrorTemplate="{StaticResource validationTemplate}" x:Name="emailNicknameBox">
            <TextBox.Text>
                <Binding Path="EmailNickname" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding.ValidationRules>
                        <validations:EmailNicknameValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.ToolTip>
                <Label Content="Enter your email" Foreground="red"/>
            </TextBox.ToolTip>
            <TextBox.InputBindings>
                <KeyBinding Key="Return" Command="{Binding GoToNextBoxCommand}"/>
            </TextBox.InputBindings>
        </TextBox>
        <Label Content="PASSWORD:" Grid.Column="1" Grid.Row="5"/>
        <components:PasswordBoxUserControl TabIndex="1" Grid.Column="1" Grid.Row="6" Height="40" Validation.ErrorTemplate="{StaticResource validationTemplate}" x:Name="passwordBox">
            <components:PasswordBoxUserControl.Password>
                <Binding Path="Password" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding.ValidationRules>
                        <validations:PasswordValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </components:PasswordBoxUserControl.Password>
            <components:PasswordBoxUserControl.InputBindings>
                <KeyBinding Key="Return" Command="{Binding GoToNextBoxCommand}"/>
            </components:PasswordBoxUserControl.InputBindings>
        </components:PasswordBoxUserControl>
        <CheckBox IsTabStop="False" Margin="0 10 5 10" IsChecked="{Binding RememberMe, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Cursor="Hand" x:Name="rememberMeCheckBox" Grid.Column="1" Grid.Row="9">
            <Label Content="Remember me" Padding="0" IsTabStop="True"/>
        </CheckBox>
        <Button IsTabStop="False" Content="Log in" Grid.Column="1" Grid.Row="10" Command="{Binding LoginButton}" Cursor="Hand" x:Name="loginButton">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=passwordBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=emailNicknameBox}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding EmailNickname}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Password}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Separator Grid.Column="1" Grid.Row="11" Margin="0 20 0 0"/>
        <Label Grid.Column="1" Grid.Row="12" Content="Don't have an account?"/>
        <Button IsTabStop="False" Grid.Column="1" Grid.Row="13" Content="Create it!" Command="{Binding CreateAccountOpenWindowButton}" Cursor="Hand"/>
    </Grid>
</Window>
